{"version":3,"sources":["Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container/Container.jsx","Components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","Components/Filter/Filter.jsx","redux/contacts/contactsSelectors.js","redux/contacts/contacts-operations.js","Components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","Components/Notifications/Notifications.jsx","redux/store.js","index.js"],"names":["module","exports","Container","props","className","s","container","children","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","target","value","action","e","preventDefault","contactForm","contactForm__label","htmlFor","type","placeholder","pattern","title","required","onChange","Button","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","deleteContact","actions","filter","Filter","dispatch","useDispatch","filter__input","contactsActions","filteredContacts","createSelector","state","contacts","items","contact","toLowerCase","includes","axios","defaults","baseURL","ContactList","useSelector","contactsSelectors","length","map","cont","contactList__item","contactList__name","contactList__number","variant","onClick","id","delete","then","catch","error","App","useEffect","get","data","container__label","item","text","newContact","uuidv4","post","container__contacts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","store","addNotification","message","insert","animationIn","animationOut","dismiss","duration","onScreen","touchSlidingExit","swipe","timingFunction","delay","fade","_","combineReducers","middleware","getDefaultMiddleware","logger","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf75da9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__zY4JK\",\"container__label\":\"Container_container__label__3_Itv\",\"container__contacts\":\"Container_container__contacts__nLYCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2ctUK\",\"contactForm__label\":\"ContactForm_contactForm__label__2ca8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__2sPBi\",\"contactList__name\":\"ContactList_contactList__name__3BCTd\",\"contactList__number\":\"ContactList_contactList__number__16psJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__isjEC\"};","import s from './Container.module.css';\nfunction Container(props) {\n  return <div className={s.container}> {props.children}</div>;\n}\n\nexport { Container };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    }\n    if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit} className={s.contactForm}>\n        <label className={s.contactForm__label} htmlFor=\"\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Snow\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.contactForm__label} htmlFor=\"\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"+38(093)9995040\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.number,\n};\n\nexport { ContactForm };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst deleteContact = createAction('contacts/delete');\n\nconst filter = createAction('contacts/filter');\n\nconst actions = {\n  fetchContactRequest, // pending\n  fetchContactSuccess, // fulfilled\n  fetchContactError, // rejected\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n\n  filter,\n  deleteContact,\n};\n\nexport default actions;\n","import s from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport contactsActions from './../../redux/contacts/contacts-actions';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <label htmlFor=\"\">\n        Find contacts by name\n        <input\n          className={s.filter__input}\n          type=\"text\"\n          placeholder=\"find by name..\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={e => dispatch(contactsActions.filter(e.target.value))}\n        />\n      </label>\n    </>\n  );\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: e => dispatch(contactsActions.filter(e.target.value)),\n// });\n\n// export default connect(null, mapDispatchToProps)(Filter);\nexport default Filter;\n","import { createSelector } from 'reselect';\r\n\r\nexport const allContacts = state => state.contacts.items;\r\nexport const filterValue = state => state.contacts.filter;\r\n\r\nexport const filteredContacts = createSelector(\r\n  [allContacts, filterValue],\r\n  (items, filter) => {\r\n    return items.filter(contact => contact.name.toLowerCase().includes(filter));\r\n  },\r\n);\r\n","// import { createAction, createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest);\r\n\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = text => dispatch => {\r\n  const newContact = {\r\n    id: uuidv4(),\r\n    name: text.name,\r\n    number: text.number,\r\n  };\r\n\r\n  dispatch(actions.addContactRequest);\r\n\r\n  axios\r\n    .post(`/contacts`, newContact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(actions.deleteContactRequest);\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\n// export const fetchContacts = createAsyncThunk(\r\n//   'contacts/fetchContacts',\r\n//   async () => {\r\n//     const contacts = await contactsApi.fetchContacts();\r\n//     return contacts;\r\n//   },\r\n// );\r\n\r\n// export const addNewContact = createAsyncThunk(\r\n//   'contacts/addContact',\r\n//   async contact => {\r\n//     const contacts = await contactsApi.addContacts(contact);\r\n//     return contacts;\r\n//   },\r\n// );\r\n\r\n// export const deleteContact = createAsyncThunk(\r\n//   'contacts/deleteContacts',\r\n//   async id => {\r\n//     try {\r\n//       await contactsApi.deleteContacts(id);\r\n//       return id;\r\n//     } catch (error) {\r\n//       return error;\r\n//     }\r\n//   },\r\n// );\r\n\r\n// export default {\r\n//   addContact,\r\n// };\r\n","// import { useEffect } from 'react';\n// import * as contactsApi from \"./../../contacts-api\"\nimport * as contactsSelectors from '../../redux/contacts/contactsSelectors';\n\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport s from './ContactList.module.css';\nimport { deleteContact } from './../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\nfunction ContactList() {\n  const contacts = useSelector(contactsSelectors.filteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      {contacts.length > 0 && (\n        <ul>\n          {contacts.map(cont => {\n            return (\n              <li className={s.contactList__item} key={cont.id}>\n                <span className={s.contactList__name}>{cont.name}</span>\n                <span className={s.contactList__number}>{cont.number}</span>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => dispatch(deleteContact(cont.id))}\n                >\n                  Delete\n                </Button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n};\n\nexport { ContactList };\n","import './App.css';\n// import { useLocalStotage } from './hooks/useLocalStorage';\nimport { Container } from './Components/Container/Container';\nimport { ContactForm } from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport { ContactList } from './Components/ContactList/ContactList';\nimport ReactNotifications from 'react-notifications-component';\nimport s from './../src/Components/Container/Container.module.css';\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  addContact,\n} from './../src/redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <ReactNotifications />\n      <Container>\n        <h1 className={s.container__label}>Phonebook</h1>\n        <ContactForm onSubmit={item => dispatch(addContact(item))} />\n\n        <h2 className={s.container__contacts}>Contacts</h2>\n\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n};\n\n// const mapDispatchToProps = dispatch => ({\n//   addItem: item => dispatch(contactsActions.addContact(item)),\n//   onDeleteContact: item => dispatch(contactsActions.deleteContact(item)),\n// });\n\n// export default connect(null, mapDispatchToProps)(App);\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nimport {\n  onDeleteNotification,\n  onSuccsessNotification,\n} from '../../Components/Notifications/Notifications';\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (state, action) => {\n    return action.payload;\n  },\n\n  [actions.addContactSuccess]: (state, action) => {\n    onSuccsessNotification();\n    return [...state, action.payload];\n  },\n\n  [actions.deleteContactSuccess]: (state, action) => {\n    onDeleteNotification();\n    return state.filter(item => {\n      return item.id !== action.payload;\n    });\n  },\n});\n\n// const loading = createReducer(false, {\n//   [actions.addContactRequest]: () => true,\n//   [actions.addContactSuccess]: () => false,\n//   [actions.addContactError]: () => false,\n//   [actions.deleteContactRequest]: () => true,\n//   [actions.deleteContactSuccess]: () => false,\n//   [actions.deleteContactError]: () => false,\n// });\n\nconst filter = createReducer([], {\n  [actions.filter]: (_, action) => [action.payload.toLowerCase()],\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  // loading,\n});\n","import { store } from 'react-notifications-component';\nexport const onSuccsessNotification = () => {\n  store.addNotification({\n    title: 'Congratulations!',\n    message: 'Контакт успешно добавлен в справочник',\n    type: 'success',\n    insert: 'top',\n    container: 'top-right',\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 5000,\n      onScreen: true,\n    },\n  });\n};\n\nexport const onErrorNotification = () => {\n  store.addNotification({\n    title: 'Ошибочка...!',\n    message: 'Такой контакт уже есть',\n    type: 'danger', // 'default', 'success', 'info', 'warning'\n    container: 'top-right', // where to position the notifications\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 2000,\n      onScreen: true,\n    },\n    touchSlidingExit: {\n      swipe: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n      fade: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n    },\n  });\n  //   alert('Такой контакт уже есть');\n};\n\nexport const onDeleteNotification = () => {\n  store.addNotification({\n    title: 'Информация!',\n    message: 'Констакт успешно удален',\n    type: 'warning', // 'default', 'success', 'info', 'warning'\n    container: 'top-right', // where to position the notifications\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 2000,\n      onScreen: true,\n    },\n    touchSlidingExit: {\n      swipe: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n      fade: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n    },\n  });\n};\n","// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import contactsReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\n// const store = configureStore({\n//   reducer: {\n//     contacts: contactsReducer,\n//   },\n//   middleware: middleware,\n//   devTools: process.env.NODE_ENV === 'development',\n// });\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// console.log(store);s\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './../src/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ;\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}