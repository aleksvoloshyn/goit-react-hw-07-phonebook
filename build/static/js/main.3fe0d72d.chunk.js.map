{"version":3,"sources":["Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container/Container.jsx","Components/ContactForm/ContactForm.jsx","redux/contacts/contacts-actions.js","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","Components/Notifications/Notifications.jsx","redux/store.js","index.js"],"names":["module","exports","Container","props","className","s","container","children","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","target","value","action","e","preventDefault","contactForm","contactForm__label","htmlFor","type","placeholder","pattern","title","required","onChange","Button","addContact","createAction","contact","payload","id","uuidv4","deleteContact","actions","filter","connect","dispatch","contactsActions","filter__input","ContactList","contacts","map","cont","contactList__item","contactList__name","contactList__number","variant","onClick","items","addItem","item","onDeleteContact","container__label","container__contacts","toLowerCase","includes","getFilteredResult","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","state","find","store","addNotification","message","animationIn","animationOut","dismiss","duration","onScreen","touchSlidingExit","swipe","timingFunction","delay","fade","insert","_","combineReducers","middleware","getDefaultMiddleware","logger","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fe0d72d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__zY4JK\",\"container__label\":\"Container_container__label__3_Itv\",\"container__contacts\":\"Container_container__contacts__nLYCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2ctUK\",\"contactForm__label\":\"ContactForm_contactForm__label__2ca8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList__item\":\"ContactList_contactList__item__2sPBi\",\"contactList__name\":\"ContactList_contactList__name__3BCTd\",\"contactList__number\":\"ContactList_contactList__number__16psJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__isjEC\"};","import s from './Container.module.css';\nfunction Container(props) {\n  return <div className={s.container}> {props.children}</div>;\n}\n\nexport { Container };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    }\n    if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit} className={s.contactForm}>\n        <label className={s.contactForm__label} htmlFor=\"\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Snow\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.contactForm__label} htmlFor=\"\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"+38(093)9995040\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.number,\n};\n\nexport { ContactForm };\n","// import types from './contacts-types';\nimport { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', contact => ({\n  payload: {\n    id: uuidv4(),\n    name: contact.name,\n    number: contact.number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst filter = createAction('contacts/filter');\n\nconst actions = {\n  addContact,\n  filter,\n  deleteContact,\n};\nexport default actions;\n","import s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from './../../redux/contacts/contacts-actions';\n\nfunction Filter({ onChange }) {\n  return (\n    <>\n      <label htmlFor=\"\">\n        Find contacts by name\n        <input\n          className={s.filter__input}\n          type=\"text\"\n          placeholder=\"find by name..\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.filter(e.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <div>\n      <ul>\n        {contacts.map(cont => {\n          return (\n            <li className={s.contactList__item} key={cont.id}>\n              <span className={s.contactList__name}>{cont.name}</span>\n              <span className={s.contactList__number}>{cont.number}</span>\n              <Button variant=\"danger\" onClick={() => deleteContact(cont.id)}>\n                Delete\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n};\n\nexport { ContactList };\n","import './App.css';\n// import { useLocalStotage } from './hooks/useLocalStorage';\nimport { Container } from './Components/Container/Container';\nimport { ContactForm } from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport { ContactList } from './Components/ContactList/ContactList';\nimport ReactNotifications from 'react-notifications-component';\nimport s from './../src/Components/Container/Container.module.css';\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\nimport { connect } from 'react-redux';\nimport contactsActions from './redux/contacts/contacts-actions';\n\nconst App = ({ contacts, filter, addItem, onDeleteContact }) => {\n  const getFilteredResult = (contacts, filter) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <ReactNotifications />\n      <Container>\n        <h1 className={s.container__label}>Phonebook</h1>\n        <ContactForm onSubmit={addItem} />\n\n        <h2 className={s.container__contacts}>Contacts</h2>\n\n        <Filter />\n        <ContactList\n          contacts={getFilteredResult(contacts, filter)}\n          deleteContact={onDeleteContact}\n        />\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: items,\n  filter: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(contactsActions.addContact(item)),\n  onDeleteContact: item => dispatch(contactsActions.deleteContact(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nimport {\n  onDeleteNotification,\n  onSuccsessNotification,\n  onErrorNotification,\n} from '../../Components/Notifications/Notifications';\n\nconst contactsState = [\n  { id: 'id-1', name: 'Funny', number: '459-12-56' },\n  { id: 'id-2', name: 'Doctor', number: '443-89-12' },\n  { id: 'id-3', name: 'Anchous', number: '645-17-79' },\n  { id: 'id-4', name: 'Peppylotta', number: '227-91-26' },\n  { id: 'id-5', name: 'Asusena', number: '227-91-236' },\n];\n\nconst items = createReducer(contactsState, {\n  [actions.addContact]: (state, action) => {\n    if (\n      state.find(cont => {\n        return cont.name === action.payload.name;\n      })\n    ) {\n      onErrorNotification();\n      return [...state];\n    } else {\n      onSuccsessNotification();\n      return [action.payload, ...state];\n    }\n  },\n\n  [actions.deleteContact]: (state, action) => {\n    onDeleteNotification();\n    return state.filter(item => {\n      return item.id !== action.payload;\n    });\n  },\n});\n\nconst filter = createReducer([], {\n  [actions.filter]: (_, action) => [action.payload.toLowerCase()],\n});\n\nexport default combineReducers({ items, filter });\n","import { store } from 'react-notifications-component';\nexport const onSuccsessNotification = () => {\n  store.addNotification({\n    title: 'Congratulations!',\n    message: 'Контакт успешно добавлен в справочник',\n    type: 'success',\n    insert: 'top',\n    container: 'top-right',\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 5000,\n      onScreen: true,\n    },\n  });\n};\n\nexport const onErrorNotification = () => {\n  store.addNotification({\n    title: 'Ошибочка...!',\n    message: 'Такой контакт уже есть',\n    type: 'danger', // 'default', 'success', 'info', 'warning'\n    container: 'top-right', // where to position the notifications\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 2000,\n      onScreen: true,\n    },\n    touchSlidingExit: {\n      swipe: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n      fade: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n    },\n  });\n  //   alert('Такой контакт уже есть');\n};\n\nexport const onDeleteNotification = () => {\n  store.addNotification({\n    title: 'Информация!',\n    message: 'Констакт успешно удален',\n    type: 'warning', // 'default', 'success', 'info', 'warning'\n    container: 'top-right', // where to position the notifications\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 2000,\n      onScreen: true,\n    },\n    touchSlidingExit: {\n      swipe: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n      fade: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n    },\n  });\n};\n","// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// console.log(store);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './../src/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ;\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}